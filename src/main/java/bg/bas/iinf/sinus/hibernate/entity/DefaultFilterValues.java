package bg.bas.iinf.sinus.hibernate.entity;

// Generated 2012-2-1 3:02:33 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;

/**
 * DefaultFilterValues generated by hbm2java
 */
@Entity
@Table(name = "default_filter_values")
public class DefaultFilterValues implements java.io.Serializable {

    private static final long serialVersionUID = -6871193802329051117L;

    private Integer defaultFilterValuesId;
	private Ontologies ontologies;
	private String iri;
	private List<DefaultDisplayValuesPath> defaultDisplayValuesPaths = new ArrayList<DefaultDisplayValuesPath>(0);
	private List<DefaultAnnotateValuesPath> defaultAnnotateValuesPaths = new ArrayList<DefaultAnnotateValuesPath>(0);

	public DefaultFilterValues() {
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "default_filter_values_id", unique = true, nullable = false)
	public Integer getDefaultFilterValuesId() {
		return this.defaultFilterValuesId;
	}

	public void setDefaultFilterValuesId(Integer defaultFilterValuesId) {
		this.defaultFilterValuesId = defaultFilterValuesId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ontologies_id", nullable = false)
	public Ontologies getOntologies() {
		return this.ontologies;
	}

	public void setOntologies(Ontologies ontologies) {
		this.ontologies = ontologies;
	}

	@Column(name = "iri", nullable = false, length = 500)
	public String getIri() {
		return this.iri;
	}

	public void setIri(String iri) {
		this.iri = iri;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "defaultFilterValues", orphanRemoval=true, cascade={CascadeType.ALL})
	@OrderBy("defaultDisplayValuesPathsId")
	public List<DefaultDisplayValuesPath> getDefaultDisplayValuesPaths() {
		return this.defaultDisplayValuesPaths;
	}

	public void setDefaultDisplayValuesPaths(List<DefaultDisplayValuesPath> defaultDisplayValuesPaths) {
		this.defaultDisplayValuesPaths = defaultDisplayValuesPaths;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "defaultFilterValues", orphanRemoval=true, cascade={CascadeType.ALL})
	@OrderBy("defaultAnnotateValuesPathsId")
	public List<DefaultAnnotateValuesPath> getDefaultAnnotateValuesPaths() {
		return this.defaultAnnotateValuesPaths;
	}

	public void setDefaultAnnotateValuesPaths(List<DefaultAnnotateValuesPath> defaultAnnotateValuesPaths) {
		this.defaultAnnotateValuesPaths = defaultAnnotateValuesPaths;
	}
}
