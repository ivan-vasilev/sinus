package bg.bas.iinf.sinus.hibernate.entity;

// Generated 2012-2-29 2:30:46 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * SelectedResults generated by hbm2java
 */
@Entity
@Table(name = "selected_results")
public class SelectedResults implements java.io.Serializable {

    private static final long serialVersionUID = -3233313585177608343L;

    private Integer selectedResultsId;
	private Users users;
	private String classIri;
	private String objectIri;
	private SavedSearches savedSearches;

	public SelectedResults() {
	}

	public SelectedResults(SavedSearches savedSearches, Users users, String classIri, String objectIri) {
		this.savedSearches = savedSearches;
		this.users = users;
		this.classIri = classIri;
		this.objectIri = objectIri;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "selected_results_id", unique = true, nullable = false)
	public Integer getSelectedResultsId() {
		return this.selectedResultsId;
	}

	public void setSelectedResultsId(Integer selectedResultsId) {
		this.selectedResultsId = selectedResultsId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "users_id", nullable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "class_iri", nullable = false, length = 500)
	public String getClassIri() {
		return this.classIri;
	}

	public void setClassIri(String classIri) {
		this.classIri = classIri;
	}

	@Column(name = "object_iri", nullable = false)
	public String getObjectIri() {
		return this.objectIri;
	}

	public void setObjectIri(String objectIri) {
		this.objectIri = objectIri;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "saved_searches_id", nullable = false)
	public SavedSearches getSavedSearches() {
		return this.savedSearches;
	}

	public void setSavedSearches(SavedSearches savedSearches) {
		this.savedSearches = savedSearches;
	}
}
