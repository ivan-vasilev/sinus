package bg.bas.iinf.sinus.hibernate.entity;

// Generated 2011-10-3 14:25:29 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import bg.bas.iinf.sinus.hibernate.listener.SavedSearchesListener;

/**
 * SavedSearches generated by hbm2java
 */
@Entity
@EntityListeners(SavedSearchesListener.class)
@Table(name = "saved_searches")
public class SavedSearches implements java.io.Serializable {

    private static final long serialVersionUID = -5074233393551102615L;

    private Integer savedSearchesId;
	private SavedSearches savedSearches;
	private Users users;
	private String sparql;
	private String sparqlNoContext;
	private String humanReadable;
	private Date dateCreated;
	private String objectUri;
	private String tag;
	private boolean allSelected;
	private boolean isSelected;
	private Set<SearchResults> searchResultses = new HashSet<SearchResults>(0);
	private List<SearchDisplayValues> searchDisplayValueses = new ArrayList<SearchDisplayValues>(0);
	private Set<SavedSearches> savedSearcheses = new HashSet<SavedSearches>(0);
	private Set<SelectedResults> selectedResults = new HashSet<SelectedResults>(0);

	public SavedSearches() {
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "saved_searches_id", unique = true, nullable = false)
	public Integer getSavedSearchesId() {
		return this.savedSearchesId;
	}

	public void setSavedSearchesId(Integer savedSearchesId) {
		this.savedSearchesId = savedSearchesId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent")
	public SavedSearches getSavedSearches() {
		return this.savedSearches;
	}

	public void setSavedSearches(SavedSearches savedSearches) {
		this.savedSearches = savedSearches;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "users_id", nullable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "sparql", nullable = false, length = 10000)
	public String getSparql() {
		return this.sparql;
	}

	public void setSparql(String sparql) {
		this.sparql = sparql;
	}

	@Column(name = "sparql_no_context", nullable = false, length = 10000)
	public String getSparqlNoContext() {
		return this.sparqlNoContext;
	}

	public void setSparqlNoContext(String sparqlNoContext) {
		this.sparqlNoContext = sparqlNoContext;
	}

	@Column(name = "human_readable", nullable = false, length = 5000)
	public String getHumanReadable() {
		return this.humanReadable;
	}

	public void setHumanReadable(String humanReadable) {
		this.humanReadable = humanReadable;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_created", nullable = false, length = 10)
	public Date getDateCreated() {
		return this.dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	@Column(name = "object_uri", nullable = false, length = 5000)
	public String getObjectUri() {
		return this.objectUri;
	}

	public void setObjectUri(String objectUri) {
		this.objectUri = objectUri;
	}

	@OneToMany(fetch = FetchType.LAZY, orphanRemoval = true, mappedBy = "savedSearches", cascade={CascadeType.ALL})
	public Set<SearchResults> getSearchResultses() {
		return this.searchResultses;
	}

	public void setSearchResultses(Set<SearchResults> searchResultses) {
		this.searchResultses = searchResultses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "savedSearches", orphanRemoval = true, cascade={CascadeType.ALL})
	@OrderBy("searchDisplayValuesId")
	public List<SearchDisplayValues> getSearchDisplayValueses() {
		return this.searchDisplayValueses;
	}

	public void setSearchDisplayValueses(List<SearchDisplayValues> searchDisplayValueses) {
		this.searchDisplayValueses = searchDisplayValueses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "savedSearches")
	public Set<SavedSearches> getSavedSearcheses() {
		return this.savedSearcheses;
	}

	public void setSavedSearcheses(Set<SavedSearches> savedSearcheses) {
		this.savedSearcheses = savedSearcheses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "savedSearches", orphanRemoval = true, cascade={CascadeType.ALL})
	public Set<SelectedResults> getSelectedResults() {
		return this.selectedResults;
	}

	public void setSelectedResults(Set<SelectedResults> selectedResults) {
		this.selectedResults = selectedResults;
	}

	@Column(name = "tag")
	public String getTag() {
    	return tag;
    }

	public void setTag(String tag) {
    	this.tag = tag;
    }

	@Column(name = "all_selected", nullable=false)
	public boolean getAllSelected() {
		return allSelected;
	}

	public void setAllSelected(boolean allSelected) {
		this.allSelected = allSelected;
	}

	@Column(name = "is_selected", nullable=false)
	public boolean getIsSelected() {
		return isSelected;
	}

	public void setIsSelected(boolean isSelected) {
		this.isSelected = isSelected;
	}

}
